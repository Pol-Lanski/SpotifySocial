services:
  db:
    image: postgres:16-alpine
    container_name: jamsession-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-spotify_comments}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  server:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: jamsession-server
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-5050}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@db:5432/spotify_comments}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://open.spotify.com,https://localhost:8443,http://localhost:5050}
    expose:
      - "5050"
    ports:
      - "5050:5050"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5050/health > /dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  caddy:
    image: caddy:2-alpine
    container_name: jamsession-caddy
    restart: unless-stopped
    ports:
      - "8443:8443"
    depends_on:
      server:
        condition: service_started
    volumes:
      - ./backend/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-data:/data
      - ./caddy-config:/config

volumes:
  pgdata:


